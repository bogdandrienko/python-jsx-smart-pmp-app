# Generated by Django 4.0.2 on 2022-03-12 07:29

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='IdeaModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subdivision_char_field', models.CharField(blank=True, db_column='subdivision_char_field_db_column', db_index=True, db_tablespace='subdivision_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">subdivision_char_field</small><hr><br>', max_length=512, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(512)], verbose_name='Наименование структурного подразделения')),
                ('sphere_char_field', models.CharField(blank=True, db_column='sphere_char_field_db_column', db_index=True, db_tablespace='sphere_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">sphere_char_field</small><hr><br>', max_length=512, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(512)], verbose_name='Сфера рационализаторского предложения')),
                ('category_char_field', models.CharField(blank=True, db_column='category_char_field_db_column', db_index=True, db_tablespace='category_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">category_char_field</small><hr><br>', max_length=512, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(512)], verbose_name='Категория')),
                ('avatar_image_field', models.ImageField(blank=True, db_column='avatar_image_field_db_column', db_index=True, db_tablespace='avatar_image_field_db_tablespace', default='uploads/rational/default_rational.jpg', error_messages=False, help_text='<small class="text-muted">>avatar_image_field</small><hr><br>', max_length=200, null=True, upload_to='uploads/rational/avatar/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png'])], verbose_name='Аватарка-заставка для идеи')),
                ('name_char_field', models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">name_char_field</small><hr><br>', max_length=250, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(250)], verbose_name='Название рац. предложения')),
                ('place_char_field', models.CharField(blank=True, db_column='place_char_field_db_column', db_index=True, db_tablespace='place_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">place_char_field</small><hr><br>', max_length=500, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(500)], verbose_name='Предполагаемое место внедрения')),
                ('description_text_field', models.TextField(blank=True, db_column='description_text_field_db_column', db_index=True, db_tablespace='description_text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">description_text_field</small><hr><br>', max_length=5000, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(5000)], verbose_name='Описание')),
                ('status_moderate_char_field', models.CharField(blank=True, db_column='status_moderate_char_field_db_column', db_index=True, db_tablespace='status_moderate_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">status_moderate_char_field</small><hr><br>', max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(256)], verbose_name='status_moderate_char_field')),
                ('comment_postmoderate_char_field', models.CharField(blank=True, db_column='comment_postmoderate_char_field_db_column', db_index=True, db_tablespace='comment_postmoderate_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">comment_postmoderate_char_field</small><hr><br>', max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(256)], verbose_name='comment_postmoderate_char_field')),
                ('visibility_boolean_field', models.BooleanField(blank=True, db_column='visibility_boolean_field_db_column', db_index=True, db_tablespace='visibility_boolean_field_db_tablespace', default=False, error_messages=False, help_text='<small class="text-muted">visibility_boolean_field</small><hr><br>', verbose_name='Видимость идеи в общем списке')),
                ('created_datetime_field', models.DateTimeField(blank=True, db_column='created_datetime_field_db_column', db_index=True, db_tablespace='created_datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">created_datetime_field</small><hr><br>', null=True, verbose_name='Дата создания')),
                ('register_datetime_field', models.DateTimeField(blank=True, db_column='register_datetime_field_db_column', db_index=True, db_tablespace='register_datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">register_datetime_field</small><hr><br>', null=True, verbose_name='Дата регистрации')),
                ('idea_author_foreign_key_field', models.ForeignKey(blank=True, db_column='idea_author_foreign_key_field_db_column', db_tablespace='idea_author_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">idea_author_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idea_author_foreign_key_field', to='backend.usermodel', verbose_name='Автор рационализаторского предложения')),
                ('postmoderate_foreign_key_field', models.ForeignKey(blank=True, db_column='postmoderate_foreign_key_field_db_column', db_tablespace='postmoderate_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">postmoderate_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postmoderate_foreign_key_field', to='backend.usermodel', verbose_name='postmoderate_foreign_key_field')),
            ],
            options={
                'verbose_name': 'Идеи в банке идей',
                'verbose_name_plural': 'Идея в банке идей',
                'db_table': 'idea_model_table',
                'ordering': ('-created_datetime_field',),
            },
        ),
    ]
