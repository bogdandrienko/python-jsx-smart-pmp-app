# Generated by Django 4.0.2 on 2022-03-25 08:29

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SettingsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_slug_field', models.SlugField(blank=True, choices=[('db_scheduler', 'Планировщик'), ('db_logging', 'Логирование'), ('db_save_value_3', 'view_value_3')], db_column='type_slug_field_db_column', db_tablespace='type_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">type_slug_field</small><hr><br>', max_length=500, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(500)], verbose_name='type_slug_field')),
                ('char_field', models.CharField(blank=True, db_column='char_field_db_column', db_index=True, db_tablespace='char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">char_field</small><hr><br>', max_length=500, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(500)], verbose_name='char_field')),
                ('slug_field', models.SlugField(blank=True, db_column='slug_field_db_column', db_tablespace='slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">slug_field</small><hr><br>', max_length=500, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(500)], verbose_name='slug_field')),
                ('text_field', models.TextField(blank=True, db_column='text_field_db_column', db_index=True, db_tablespace='text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">text_field</small><hr><br>', max_length=5000, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(5000)], verbose_name='text_field')),
                ('integer_field', models.IntegerField(blank=True, db_column='integer_field_db_column', db_index=True, db_tablespace='integer_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">integer_field</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='integer_field')),
                ('float_field', models.FloatField(blank=True, db_column='float_field_db_column', db_index=True, db_tablespace='float_field_db_tablespace', default=0.0, error_messages=False, help_text='<small class="text-muted">float_field</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(-1000), django.core.validators.MaxValueValidator(1000)], verbose_name='float_field')),
                ('boolean_field', models.BooleanField(blank=True, db_column='boolean_field_db_column', db_index=True, db_tablespace='boolean_field_db_tablespace', default=True, error_messages=False, help_text='<small class="text-muted">boolean_field</small><hr><br>', verbose_name='boolean_field')),
                ('datetime_field', models.DateTimeField(blank=True, db_column='datetime_field_db_column', db_index=True, db_tablespace='datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">datetime_field</small><hr><br>', null=True, verbose_name='Дата и время записи')),
            ],
            options={
                'verbose_name': 'Настройка',
                'verbose_name_plural': 'Admin 4, Настройки',
                'db_table': 'settings_admin_model_table',
                'ordering': ('-type_slug_field',),
            },
        ),
    ]
