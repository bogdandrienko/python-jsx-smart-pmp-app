# Generated by Django 4.0 on 2022-02-04 16:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('backend', '0002_alter_usermodel_achievements_text_field_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='actionmodel',
            name='name_char_field',
            field=models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">кириллица, любой регистр, можно с пробелами, например: "Модератор отдела ОУПиБП"</small><hr><br>', max_length=128, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Имя действия для отображения'),
        ),
        migrations.AlterField(
            model_name='actionmodel',
            name='name_slug_field',
            field=models.SlugField(blank=True, db_column='name_slug_field_db_column', db_tablespace='name_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">латинница, нижний регистр, без пробелов, например: "moderator_oupibp"</small><hr><br>', max_length=128, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Имя действия для валидации и ссылок'),
        ),
        migrations.AlterField(
            model_name='actionmodel',
            name='type_slug_field',
            field=models.SlugField(blank=True, choices=[('0_main', 'Основное'), ('1_module', 'Модуль'), ('2_section', 'Секция'), ('3_component', 'Компонент'), ('4_utils', 'Вспомогательное')], db_column='type_slug_field_db_column', db_tablespace='type_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">Строка текста валидная для ссылок и системных вызовов, example: "success"</small><hr><br>', max_length=128, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Тип:'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='alarm_level_integer_field',
            field=models.IntegerField(blank=True, db_column='alarm_level_field_db_column', db_index=True, db_tablespace='alarm_level_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">alarm_level</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='alarm_level'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='alias_char_field',
            field=models.CharField(blank=True, db_column='alias_char_field_db_column', db_index=True, db_tablespace='alias_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">псевдоним, используемый для отображения или записи в стороннюю базу</small><hr><br>', max_length=64, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(64)], verbose_name='Псевдоним компонента:'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='bright_level_integer_field',
            field=models.IntegerField(blank=True, db_column='bright_level_integer_field_db_column', db_index=True, db_tablespace='bright_level_integer_field_db_tablespace', default=100, error_messages=False, help_text='<small class="text-muted">bright_level</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='bright_level'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='correct_coefficient_float_field',
            field=models.FloatField(blank=True, db_column='correct_coefficient_float_field_db_column', db_index=True, db_tablespace='correct_coefficient_float_field_db_tablespace', default=0.0, error_messages=False, help_text='<small class="text-muted">correct_coefficient_</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='correct_coefficient_'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='count_not_zero_integer_field',
            field=models.IntegerField(blank=True, db_column='count_not_zero_integer_field_db_column', db_index=True, db_tablespace='count_not_zero_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">count_not_zero</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(256)], verbose_name='count_not_zero'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='genericipaddress_field',
            field=models.GenericIPAddressField(blank=True, db_column='genericipaddress_field_db_column', db_index=True, db_tablespace='genericipaddress_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">ip адрес в формате: "192.168.15.202"<hr><br>', null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(32)], verbose_name='Ip адрес источника компонента:'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='in_range_set_from_integer_field',
            field=models.IntegerField(blank=True, db_column='in_range_set_from_integer_field_db_column', db_index=True, db_tablespace='bright_level_integer_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">in_range_set_from</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(256)], verbose_name='in_range_set_from'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='in_range_set_to_integer_field',
            field=models.IntegerField(blank=True, db_column='in_range_set_to_integer_field_db_column', db_index=True, db_tablespace='in_range_set_to_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">in_range_set_to</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(256)], verbose_name='in_range_set_to'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='login_slug_field',
            field=models.SlugField(blank=True, db_column='login_protocol_slug_field_db_column', db_tablespace='login_protocol_slug_field_db_tablespace', default='admin', error_messages=False, help_text='<small class="text-muted">логин от источника компонента: "admin"</small><hr><br>', null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(50)], verbose_name='Логин источника компонента:'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='mask_char_field',
            field=models.CharField(blank=True, db_column='mask_char_field_db_column', db_index=True, db_tablespace='mask_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">путь от главной папки к папке с изображением-маской: "static/media/data/computer_vision/temp"</small><hr><br>', max_length=64, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(64)], verbose_name='Путь к маске компонента:'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='module_foreign_key_field',
            field=models.ForeignKey(blank=True, db_column='module_foreign_key_field_db_column', db_tablespace='module_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">связь, к какому модулю относится компонент</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.computervisionmodulemodel', verbose_name='Модуль компонента:'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='null_level_integer_field',
            field=models.IntegerField(blank=True, db_column='null_level_field_db_column', db_index=True, db_tablespace='null_level_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">null_level</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(256)], verbose_name='null_level'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='password_slug_field',
            field=models.SlugField(blank=True, db_column='password_protocol_slug_field_db_column', db_tablespace='password_protocol_slug_field_db_tablespace', default='q1234567', error_messages=False, help_text='<small class="text-muted">пароль от источника компонента: "q1234567"</small><hr><br>', null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(50)], verbose_name='Пароль источника компонента:'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='play_boolean_field',
            field=models.BooleanField(blank=True, db_column='play_boolean_field_db_column', db_index=True, db_tablespace='play_boolean_field_db_tablespace', default=False, error_messages=False, help_text='<small class="text-muted">нужно ли делать расчёты каждый тик в этом компоненте</small><hr><br>', verbose_name='Запуск работы компонента:'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='point_1_1_integer_field',
            field=models.IntegerField(blank=True, db_column='point_1_1_field_db_column', db_index=True, db_tablespace='point_1_1_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">point_1_1</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(256)], verbose_name='point_1_1'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='point_1_2_integer_field',
            field=models.IntegerField(blank=True, db_column='point_1_2_field_db_column', db_index=True, db_tablespace='point_1_2_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">point_1_2</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(256)], verbose_name='point_1_2'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='point_1_3_integer_field',
            field=models.IntegerField(blank=True, db_column='point_1_3_field_db_column', db_index=True, db_tablespace='point_1_3_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">point_1_3</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(256)], verbose_name='point_1_3'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='point_2_1_integer_field',
            field=models.IntegerField(blank=True, db_column='point_2_1_field_db_column', db_index=True, db_tablespace='point_2_1_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">point_2_1</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(256)], verbose_name='point_2_1'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='point_2_2_integer_field',
            field=models.IntegerField(blank=True, db_column='point_2_2_field_db_column', db_index=True, db_tablespace='point_2_2_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">point_2_2</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(256)], verbose_name='point_2_2'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='point_2_3_integer_field',
            field=models.IntegerField(blank=True, db_column='point_2_3_field_db_column', db_index=True, db_tablespace='point_2_3_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">point_2_3</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(256)], verbose_name='point_2_3'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='port_integer_field',
            field=models.IntegerField(blank=True, db_column='port_integer_field_db_column', db_index=True, db_tablespace='port_integer_field_db_tablespace', default=80, error_messages=False, help_text='<small class="text-muted">порт соединения: "80" / "434"</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999)], verbose_name='Порт api источника компонента:'),
        ),
        migrations.AlterField(
            model_name='computervisioncomponentmodel',
            name='protocol_slug_field',
            field=models.SlugField(blank=True, db_column='protocol_slug_field_db_column', db_tablespace='protocol_slug_field_db_tablespace', default='http://', error_messages=False, help_text='<small class="text-muted">способ соединения с api: "http://" / "rtsp://" / "https://"</small><hr><br>', null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(50)], verbose_name='Протокол api источника компонента:'),
        ),
        migrations.AlterField(
            model_name='computervisionmodulemodel',
            name='datetime_field',
            field=models.DateTimeField(blank=True, db_column='datetime_field_db_column', db_index=True, db_tablespace='datetime_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">дата и время последнего тика модуля</small><hr><br>', null=True, verbose_name='datetime_field'),
        ),
        migrations.AlterField(
            model_name='computervisionmodulemodel',
            name='delay_float_field',
            field=models.FloatField(blank=True, db_column='delay_float_field_db_column', db_index=True, db_tablespace='delay_float_field_db_tablespace', default=3.0, error_messages=False, help_text='<small class="text-muted">время для тика каждого компонента в модуле</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3600)], verbose_name='Задержка цикла модуля:'),
        ),
        migrations.AlterField(
            model_name='computervisionmodulemodel',
            name='description_text_field',
            field=models.TextField(blank=True, db_column='description_text_field_db_column', db_index=True, db_tablespace='description_text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">описание для модуля</small><hr><br>', max_length=1024, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(1024)], verbose_name='Описание модуля:'),
        ),
        migrations.AlterField(
            model_name='computervisionmodulemodel',
            name='duration_float_field',
            field=models.FloatField(blank=True, db_column='duration_float_field_db_column', db_index=True, db_tablespace='duration_float_field_db_tablespace', default=0.0, error_messages=False, help_text='<small class="text-muted">длительность последнего тика модуля</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3600)], verbose_name='Длительность операции:'),
        ),
        migrations.AlterField(
            model_name='computervisionmodulemodel',
            name='error_text_field',
            field=models.TextField(blank=True, db_column='error_text_field_db_column', db_index=True, db_tablespace='error_text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">описание исключения и/или ошибки модуля</small><hr><br>', max_length=2048, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(2048)], verbose_name='Текст исключения-ошибки модуля:'),
        ),
        migrations.AlterField(
            model_name='computervisionmodulemodel',
            name='name_char_field',
            field=models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">короткое и лаконичное имя для модуля</small><hr><br>', max_length=64, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(64)], verbose_name='Имя модуля:'),
        ),
        migrations.AlterField(
            model_name='computervisionmodulemodel',
            name='path_slug_field',
            field=models.SlugField(blank=True, choices=[('16_operation', 'Грохота, 16 операция, 10 отметка'), ('26_operation', 'Грохота, 26 операция, 10 отметка'), ('36_operation', 'Грохота, 36 операция, 10 отметка')], db_column='path_slug_field_db_column', db_tablespace='path_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">полный путь от класса до функции вызова цикла модуля</small><hr><br>', max_length=128, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Путь модуля:'),
        ),
        migrations.AlterField(
            model_name='computervisionmodulemodel',
            name='play_boolean_field',
            field=models.BooleanField(blank=True, db_column='play_boolean_field_db_column', db_index=True, db_tablespace='play_boolean_field_db_tablespace', default=False, error_messages=False, help_text='<small class="text-muted">нужно ли запускать модуль каждый тик главного цикла событий</small><hr><br>', verbose_name='Запуск работы модуля:'),
        ),
        migrations.AlterField(
            model_name='computervisionmodulemodel',
            name='restart_boolean_field',
            field=models.BooleanField(blank=True, db_column='restart_boolean_field_db_column', db_index=True, db_tablespace='restart_boolean_field_db_tablespace', default=True, error_messages=False, help_text='<small class="text-muted">нужно ли перезапускать модуль после ошибки</small><hr><br>', verbose_name='Рестарт модуля после ошибки:'),
        ),
        migrations.AlterField(
            model_name='groupmodel',
            name='action_many_to_many_field',
            field=models.ManyToManyField(blank=True, db_column='path_many_to_many_field_db_column', db_index=True, db_tablespace='path_many_to_many_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted underline">Связь, с каким-либо пользователем, example: "to=User.objects.get(username="Bogdan")"</small><hr><br>', related_name='action_many_to_many_field', to='backend.ActionModel', verbose_name='Разрешённые действия группы'),
        ),
        migrations.AlterField(
            model_name='groupmodel',
            name='group_foreign_key_field',
            field=models.ForeignKey(blank=True, db_column='group_foreign_key_field_db_column', db_tablespace='group_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">Связь, с какой-либо группой, example: "to=Group.objects.get(name="User")"</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.group', verbose_name='Группа:'),
        ),
        migrations.AlterField(
            model_name='groupmodel',
            name='name_char_field',
            field=models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">кириллица, любой регистр, можно с пробелами, например: "Модератор отдела ОУПиБП"</small><hr><br>', max_length=128, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Имя группы для отображения'),
        ),
        migrations.AlterField(
            model_name='groupmodel',
            name='name_slug_field',
            field=models.SlugField(blank=True, db_column='name_slug_field_db_column', db_tablespace='name_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">латинница, нижний регистр, без пробелов, например: "moderator_oupibp"</small><hr><br>', max_length=128, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Имя группы для валидации и ссылок'),
        ),
        migrations.AlterField(
            model_name='groupmodel',
            name='position_float_field',
            field=models.FloatField(blank=True, db_column='position_float_field_db_column', db_index=True, db_tablespace='position_float_field_db_tablespace', default=1.0, error_messages=False, help_text='<small class="text-muted">Число с плавающей запятой, example: "0.0"</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(-1000), django.core.validators.MaxValueValidator(1000)], verbose_name='Позиция в админ-панели:'),
        ),
        migrations.AlterField(
            model_name='groupmodel',
            name='user_many_to_many_field',
            field=models.ManyToManyField(blank=True, db_column='user_many_to_many_field_db_column', db_index=True, db_tablespace='user_many_to_many_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted underline">Связь, с каким-либо пользователем, example: "to=User.objects.get(username="Bogdan")"</small><hr><br>', related_name='user_many_to_many_field', to='backend.UserModel', verbose_name='Пользователи группы'),
        ),
        migrations.AlterField(
            model_name='ideacommentmodel',
            name='author_foreign_key_field',
            field=models.ForeignKey(blank=True, db_column='author_foreign_key_field_db_column', db_tablespace='author_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">author_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.usermodel', verbose_name='Автор'),
        ),
        migrations.AlterField(
            model_name='ideacommentmodel',
            name='datetime_field',
            field=models.DateTimeField(blank=True, db_column='datetime_field_db_column', db_index=True, db_tablespace='datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">Дата и время, example: "31.12.2021Т23:59:59"</small><hr><br>', null=True, verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='ideacommentmodel',
            name='idea_foreign_key_field',
            field=models.ForeignKey(blank=True, db_column='idea_foreign_key_field_db_column', db_tablespace='idea_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">idea_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.ideamodel', verbose_name='Идея'),
        ),
        migrations.AlterField(
            model_name='ideacommentmodel',
            name='text_field',
            field=models.TextField(blank=True, db_column='text_field_db_column', db_index=True, db_tablespace='text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">text_field</small><hr><br>', max_length=512, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(512)], verbose_name='Комментарий'),
        ),
        migrations.AlterField(
            model_name='ideamodel',
            name='addiction_file_field',
            field=models.FileField(blank=True, db_column='addiction_file_field_db_column', db_index=True, db_tablespace='addiction_file_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">addiction_file_field</small><hr><br>', null=True, upload_to='uploads/idea/files/', validators=[django.core.validators.FileExtensionValidator(['xlsx', 'xls', 'docx', 'doc', 'pdf'])], verbose_name='Файл-приложение'),
        ),
        migrations.AlterField(
            model_name='ideamodel',
            name='author_foreign_key_field',
            field=models.ForeignKey(blank=True, db_column='author_foreign_key_field_db_column', db_tablespace='author_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">author_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.usermodel', verbose_name='Автор'),
        ),
        migrations.AlterField(
            model_name='ideamodel',
            name='avatar_image_field',
            field=models.ImageField(blank=True, db_column='avatar_image_field_db_column', db_index=True, db_tablespace='avatar_image_field_db_tablespace', default='uploads/idea/default_avatar.jpg', error_messages=False, help_text='<small class="text-muted">>avatar_image_field</small><hr><br>', null=True, upload_to='uploads/idea/avatar/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png'])], verbose_name='Аватарка-заставка для идеи'),
        ),
        migrations.AlterField(
            model_name='ideamodel',
            name='category_slug_field',
            field=models.SlugField(blank=True, choices=[('innovation', 'Инновации'), ('optimization', 'Оптимизации'), ('industry', 'Индустрия 4.0'), ('other', 'Другое')], db_column='category_slug_field_db_column', db_tablespace='category_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">category_slug_field</small><hr><br>', max_length=16, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(16)], verbose_name='Категория'),
        ),
        migrations.AlterField(
            model_name='ideamodel',
            name='created_datetime_field',
            field=models.DateTimeField(blank=True, db_column='created_datetime_field_db_column', db_index=True, db_tablespace='created_datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">created_datetime_field</small><hr><br>', null=True, verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='ideamodel',
            name='full_description_text_field',
            field=models.TextField(blank=True, db_column='full_description_text_field_db_column', db_index=True, db_tablespace='full_description_text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">full_description_text_field</small><hr><br>', max_length=1024, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(1024)], verbose_name='Полное описание'),
        ),
        migrations.AlterField(
            model_name='ideamodel',
            name='name_char_field',
            field=models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">name_char_field</small><hr><br>', max_length=32, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(32)], verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='ideamodel',
            name='register_datetime_field',
            field=models.DateTimeField(blank=True, db_column='register_datetime_field_db_column', db_index=True, db_tablespace='register_datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">register_datetime_field</small><hr><br>', null=True, verbose_name='Дата регистрации'),
        ),
        migrations.AlterField(
            model_name='ideamodel',
            name='short_description_char_field',
            field=models.CharField(blank=True, db_column='short_description_char_field_db_column', db_index=True, db_tablespace='short_description_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">short_description_char_field</small><hr><br>', max_length=64, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(64)], verbose_name='Краткое описание'),
        ),
        migrations.AlterField(
            model_name='ideamodel',
            name='visibility_boolean_field',
            field=models.BooleanField(blank=True, db_column='visibility_boolean_field_db_column', db_index=True, db_tablespace='visibility_boolean_field_db_tablespace', default=False, error_messages=False, help_text='<small class="text-muted">visibility_boolean_field</small><hr><br>', verbose_name='Видимость идеи в общем списке'),
        ),
        migrations.AlterField(
            model_name='idearatingmodel',
            name='author_foreign_key_field',
            field=models.ForeignKey(blank=True, db_column='author_foreign_key_field_db_column', db_tablespace='author_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">author_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.usermodel', verbose_name='Автор'),
        ),
        migrations.AlterField(
            model_name='idearatingmodel',
            name='datetime_field',
            field=models.DateTimeField(blank=True, db_column='datetime_field_db_column', db_index=True, db_tablespace='datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">Дата и время, example: "31.12.2021Т23:59:59"</small><hr><br>', null=True, verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='idearatingmodel',
            name='idea_foreign_key_field',
            field=models.ForeignKey(blank=True, db_column='idea_foreign_key_field_db_column', db_tablespace='idea_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">idea_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.ideamodel', verbose_name='Идея'),
        ),
        migrations.AlterField(
            model_name='idearatingmodel',
            name='status_boolean_field',
            field=models.BooleanField(blank=True, db_column='status_boolean_field_db_column', db_index=True, db_tablespace='status_boolean_field_db_tablespace', default=True, error_messages=False, help_text='<small class="text-muted">status_boolean_field</small><hr><br>', verbose_name='Лайк / дизлайк'),
        ),
        migrations.AlterField(
            model_name='loggingmodel',
            name='datetime_field',
            field=models.DateTimeField(blank=True, db_column='datetime_field_db_column', db_index=True, db_tablespace='datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">Дата и время, example: "31.12.2021Т23:59:59"</small><hr><br>', null=True, verbose_name='Дата и время записи'),
        ),
        migrations.AlterField(
            model_name='loggingmodel',
            name='error_text_field',
            field=models.TextField(blank=True, db_column='error_text_field_db_column', db_index=True, db_tablespace='error_text_field_db_tablespace', default='error: ', error_messages=False, help_text='<small class="text-muted">Много текста, example: "текст, текст..."</small><hr><br>', max_length=512, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(512)], verbose_name='Текст ошибки и/или исключения'),
        ),
        migrations.AlterField(
            model_name='loggingmodel',
            name='ip_genericipaddress_field',
            field=models.GenericIPAddressField(blank=True, db_column='ip_genericipaddress_field_field_db_column', db_index=True, db_tablespace='ip_genericipaddress_field_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">Строка содержащая ip-адрес, example: "127.0.0.1"</small><hr><br>', null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(12)], verbose_name='Ip адрес клиента'),
        ),
        migrations.AlterField(
            model_name='loggingmodel',
            name='request_method_slug_field',
            field=models.SlugField(blank=True, db_column='request_method_slug_field_field_db_column', db_tablespace='request_method_slug_field_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">GET: просмотр страницы, POST: отправка данных из формы</small><hr><br>', max_length=4, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(4)], verbose_name='Метод запроса'),
        ),
        migrations.AlterField(
            model_name='loggingmodel',
            name='request_path_slug_field',
            field=models.SlugField(blank=True, db_column='request_path_slug_field_field_db_column', db_tablespace='request_path_slug_field_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">Строка содержащая путь обращения, example: "https://.../home/"</small><hr><br>', max_length=128, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Действие пользователя'),
        ),
        migrations.AlterField(
            model_name='modulesmodel',
            name='current_path_slug_field',
            field=models.SlugField(blank=True, db_column='current_path_slug_field_db_column', db_tablespace='current_path_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">Строка текста валидная для ссылок и системных вызовов, example: "success"</small><hr><br>', max_length=128, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Ссылка текущая:'),
        ),
        migrations.AlterField(
            model_name='modulesmodel',
            name='image_field',
            field=models.ImageField(blank=True, db_column='image_field_db_column', db_index=True, db_tablespace='image_field_db_tablespace', default='admin/module/module.png', error_messages=False, help_text='<small class="text-muted">>Файл, с расширением изображения, example: "example.jpg(/png/bpm...)"</small><hr><br>', null=True, upload_to='uploads/admin/module', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png'])], verbose_name='file_field'),
        ),
        migrations.AlterField(
            model_name='modulesmodel',
            name='name_char_field',
            field=models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">Небольшая срока текста, example: "текст, текст"</small><hr><br>', max_length=128, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Название:'),
        ),
        migrations.AlterField(
            model_name='modulesmodel',
            name='next_path_slug_field',
            field=models.SlugField(blank=True, db_column='next_path_slug_field_db_column', db_tablespace='next_path_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">Строка текста валидная для ссылок и системных вызовов, example: "success"</small><hr><br>', max_length=128, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Ссылка вперёд:'),
        ),
        migrations.AlterField(
            model_name='modulesmodel',
            name='position_float_field',
            field=models.FloatField(blank=True, db_column='position_float_field_db_column', db_index=True, db_tablespace='position_float_field_db_tablespace', default=1.0, error_messages=False, help_text='<small class="text-muted">Число с плавающей запятой, example: "0.0"</small><hr><br>', null=True, validators=[django.core.validators.MinValueValidator(-1000), django.core.validators.MaxValueValidator(1000)], verbose_name='Позиция в модулях:'),
        ),
        migrations.AlterField(
            model_name='modulesmodel',
            name='previous_path_slug_field',
            field=models.SlugField(blank=True, db_column='previous_path_slug_field_db_column', db_tablespace='previous_path_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">Строка текста валидная для ссылок и системных вызовов, example: "success"</small><hr><br>', max_length=128, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Ссылка назад:'),
        ),
        migrations.AlterField(
            model_name='modulesmodel',
            name='text_field',
            field=models.TextField(blank=True, db_column='text_field_db_column', db_index=True, db_tablespace='text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">Много текста, example: "текст, текст..."</small><hr><br>', max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(256)], verbose_name='Описание:'),
        ),
        migrations.AlterField(
            model_name='modulesmodel',
            name='type_slug_field',
            field=models.SlugField(blank=True, choices=[('0_module', 'Модуль'), ('1_section', 'Секция'), ('2_component', 'Компонент')], db_column='type_slug_field_db_column', db_tablespace='type_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">Строка текста валидная для ссылок и системных вызовов, example: "success"</small><hr><br>', max_length=64, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(64)], verbose_name='Тип:'),
        ),
        migrations.AlterField(
            model_name='notificationmodel',
            name='created_datetime_field',
            field=models.DateTimeField(blank=True, db_column='created_datetime_field_db_column', db_index=True, db_tablespace='created_datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">created_datetime_field</small><hr><br>', null=True, verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='notificationmodel',
            name='decision_datetime_field',
            field=models.DateTimeField(blank=True, db_column='decision_datetime_field_db_column', db_index=True, db_tablespace='decision_datetime_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">register_datetime_field</small><hr><br>', null=True, verbose_name='Дата решения'),
        ),
        migrations.AlterField(
            model_name='notificationmodel',
            name='name_char_field',
            field=models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">кириллица, любой регистр, можно с пробелами, например: "Модератор отдела ОУПиБП"</small><hr><br>', max_length=128, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Имя группы для отображения'),
        ),
        migrations.AlterField(
            model_name='notificationmodel',
            name='status_boolean_field',
            field=models.BooleanField(blank=True, db_column='status_boolean_field_db_column', db_index=True, db_tablespace='status_boolean_field_db_tablespace', default=False, error_messages=False, help_text='<small class="text-muted">Значение правда или ложь, example: "True" / "False"</small><hr><br>', verbose_name='Статус: '),
        ),
        migrations.AlterField(
            model_name='notificationmodel',
            name='text_field',
            field=models.TextField(blank=True, db_column='text_field_db_column', db_index=True, db_tablespace='text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">Много текста, example: "текст, текст..."</small><hr><br>', max_length=1024, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(1024)], verbose_name='text_field'),
        ),
        migrations.AlterField(
            model_name='notificationmodel',
            name='type_slug_field',
            field=models.SlugField(blank=True, choices=[('errors', 'Ошибки'), ('notifications', 'Уведомления'), ('messages', 'Сообщения')], db_column='type_slug_field_db_column', db_tablespace='type_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">полный путь от класса до функции вызова цикла модуля</small><hr><br>', max_length=128, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Путь модуля:'),
        ),
        migrations.AlterField(
            model_name='notificationmodel',
            name='user_foreign_key_field',
            field=models.ForeignKey(blank=True, db_column='user_foreign_key_field_db_column', db_tablespace='user_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">Связь, с какой-либо группой, example: "to=Group.objects.get(name="User")"</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.usermodel', verbose_name='Пользователь:'),
        ),
    ]
