access_log /var/log/nginx/access.log;
error_log /var/log/nginx/error.log;

include /etc/nginx/zulip-include/headers;

# Serve a custom error page when the app is down
error_page 502 503 504 /static/webpack-bundles/5xx.html;

# Serve static files directly
location /static/ {
    alias /home/zulip/prod-static/;
    include /etc/nginx/zulip-include/headers;
    add_header Access-Control-Allow-Origin *;

    # Set a nonexistent path, so we just serve the nice Django 404 page.
    error_page 404 /django_static_404.html;
}

# Send longpoll requests to Tornado
location /json/events {
    proxy_pass $tornado_server;
    include /etc/nginx/zulip-include/proxy_longpolling;

    proxy_set_header X-Real-IP       $remote_addr;
}

# Send longpoll requests to Tornado
location /api/v1/events {
    include /etc/nginx/zulip-include/api_headers;

    if ($request_method = 'OPTIONS') {
        return 204;
    }

    proxy_pass $tornado_server;
    include /etc/nginx/zulip-include/proxy_longpolling;

    proxy_set_header X-Real-IP       $remote_addr;
}

# Send everything else to Django via uWSGI
location / {
    include uwsgi_params;
    uwsgi_pass django;
}

# These Django routes not under /api are shared between mobile and
# web, and thus need API headers added.  We can't easily collapse
# these blocks with the /api block, because regular expressions take
# priority over paths in nginx's order-of-operations, and we don't
# want to override the tornado configuration for /api/v1/events.  The
# last is handled via uploads-route.
location /thumbnail {
    include /etc/nginx/zulip-include/api_headers;

    include uwsgi_params;
    uwsgi_pass django;
}
location /avatar {
    include /etc/nginx/zulip-include/api_headers;

    include uwsgi_params;
    uwsgi_pass django;
}

# Send all API routes not covered above to Django via uWSGI
location /api/ {
    include /etc/nginx/zulip-include/api_headers;

    include uwsgi_params;
    uwsgi_pass django;
}

include /etc/nginx/zulip-include/uploads.route;
include /etc/nginx/zulip-include/app.d/*.conf;
