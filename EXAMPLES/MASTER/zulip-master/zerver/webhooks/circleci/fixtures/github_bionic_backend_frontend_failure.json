{
  "payload": {
    "compare": null,
    "previous_successful_build": {
      "build_num": 1422,
      "status": "success",
      "build_time_millis": 40755
    },
    "build_parameters": {
      "CIRCLE_JOB": "bionic-backend-frontend"
    },
    "oss": true,
    "all_commit_details_truncated": false,
    "committer_date": "2020-06-12T13:33:46.000Z",
    "steps": [
      {
        "name": "Spin Up Environment",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Spin Up Environment",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:38:14.862Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:37:48.940Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 0,
            "run_time_millis": 25922,
            "has_output": true
          }
        ]
      },
      {
        "name": "Preparing Environment Variables",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Preparing Environment Variables",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:38:15.163Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:38:15.143Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 99,
            "run_time_millis": 20,
            "has_output": true
          }
        ]
      },
      {
        "name": "Checkout code",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Checkout code",
            "bash_command": "#!/bin/sh\nset -e\n\n# Workaround old docker images with incorrect $HOME\n# check https://github.com/docker/docker/issues/2968 for details\nif [ \"${HOME}\" = \"/\" ]\nthen\n  export HOME=$(getent passwd $(id -un) | cut -d: -f6)\nfi\n\necho Using SSH Config Dir $SSH_CONFIG_DIR\n\nmkdir -p $SSH_CONFIG_DIR\n\necho 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\nbitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\n' >> $SSH_CONFIG_DIR/known_hosts\n\n(umask 077; touch $SSH_CONFIG_DIR/id_rsa)\nchmod 0600 $SSH_CONFIG_DIR/id_rsa\n(cat <<EOF > $SSH_CONFIG_DIR/id_rsa\n$CHECKOUT_KEY\nEOF\n)\n\nexport GIT_SSH_COMMAND='ssh -i $SSH_CONFIG_DIR/id_rsa -o UserKnownHostsFile=$SSH_CONFIG_DIR/known_hosts'\n\n# use git+ssh instead of https\ngit config --global url.\"ssh://git@github.com\".insteadOf \"https://github.com\" || true\ngit config --global gc.auto 0 || true\n\nif [ -e /home/circleci/zulip/.git ]\nthen\n  cd /home/circleci/zulip\n  git remote set-url origin \"$CIRCLE_REPOSITORY_URL\" || true\nelse\n  mkdir -p /home/circleci/zulip\n  cd /home/circleci/zulip\n  git clone \"$CIRCLE_REPOSITORY_URL\" .\nfi\n\nif [ -n \"$CIRCLE_TAG\" ]\nthen\n  git fetch --force origin \"refs/tags/${CIRCLE_TAG}\"\nelse\n  git fetch --force origin \"circleci:remotes/origin/circleci\"\nfi\n\n\nif [ -n \"$CIRCLE_TAG\" ]\nthen\n  git reset --hard \"$CIRCLE_SHA1\"\n  git checkout -q \"$CIRCLE_TAG\"\nelif [ -n \"$CIRCLE_BRANCH\" ]\nthen\n  git reset --hard \"$CIRCLE_SHA1\"\n  git checkout -q -B \"$CIRCLE_BRANCH\"\nfi\n\ngit reset --hard \"$CIRCLE_SHA1\"",
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:38:28.848Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:38:15.176Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 101,
            "run_time_millis": 13672,
            "has_output": true
          }
        ]
      },
      {
        "name": "create cache directories",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "create cache directories",
            "bash_command": "#!/bin/bash -eo pipefail\ndirs=(/srv/zulip-{npm,venv,emoji}-cache)\nsudo mkdir -p \"${dirs[@]}\"\nsudo chown -R circleci \"${dirs[@]}\"\n",
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:38:28.889Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "start_time": "2020-06-12T13:38:28.854Z",
            "background": false,
            "exit_code": 0,
            "insignificant": false,
            "canceled": null,
            "step": 102,
            "run_time_millis": 35,
            "has_output": false
          }
        ]
      },
      {
        "name": "do Bionic hack",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "do Bionic hack",
            "bash_command": "#!/bin/bash -eo pipefail\n# Temporary hack till `sudo service redis-server start` gets fixes in Bionic. See\n# https://chat.zulip.org/#narrow/stream/3-backend/topic/Ubuntu.20bionic.20CircleCI\nsudo sed -i '/^bind/s/bind.*/bind 0.0.0.0/' /etc/redis/redis.conf\n",
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:38:28.914Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "start_time": "2020-06-12T13:38:28.895Z",
            "background": false,
            "exit_code": 0,
            "insignificant": false,
            "canceled": null,
            "step": 103,
            "run_time_millis": 19,
            "has_output": false
          }
        ]
      },
      {
        "name": "Restoring Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Restoring Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:39:01.223Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:38:28.920Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 104,
            "run_time_millis": 32303,
            "has_output": true
          }
        ]
      },
      {
        "name": "Restoring Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Restoring Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:39:14.156Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:39:01.229Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 105,
            "run_time_millis": 12927,
            "has_output": true
          }
        ]
      },
      {
        "name": "Restoring Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Restoring Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:39:16.894Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:39:14.162Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 106,
            "run_time_millis": 2732,
            "has_output": true
          }
        ]
      },
      {
        "name": "install dependencies",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "install dependencies",
            "bash_command": "#!/bin/bash -eo pipefail\nsudo apt-get update\n# Install moreutils so we can use `ts` and `mispipe` in the following.\nsudo apt-get install -y moreutils\n\n# CircleCI sets the following in Git config at clone time:\n#   url.ssh://git@github.com.insteadOf https://github.com\n# This breaks the Git clones in the NVM `install.sh` we run\n# in `install-node`.\n# TODO: figure out why that breaks, and whether we want it.\n#   (Is it an optimization?)\nrm -f /home/circleci/.gitconfig\n\n# This is the main setup job for the test suite\nmispipe \"tools/ci/setup-backend\" ts\n\n# Cleaning caches is mostly unnecessary in Circle, because\n# most builds don't get to write to the cache.\n# mispipe \"scripts/lib/clean-unused-caches --verbose --threshold 0\" ts\n",
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:41:22.387Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:39:16.900Z",
            "background": false,
            "exit_code": 0,
            "insignificant": false,
            "canceled": null,
            "step": 107,
            "run_time_millis": 125487,
            "has_output": true
          }
        ]
      },
      {
        "name": "Saving Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Saving Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:41:22.431Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:41:22.393Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 108,
            "run_time_millis": 38,
            "has_output": true
          }
        ]
      },
      {
        "name": "Saving Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Saving Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:41:22.470Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:41:22.438Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 109,
            "run_time_millis": 32,
            "has_output": true
          }
        ]
      },
      {
        "name": "Saving Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Saving Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:41:22.494Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:41:22.478Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 110,
            "run_time_millis": 16,
            "has_output": true
          }
        ]
      },
      {
        "name": "run backend tests",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": true,
            "infrastructure_fail": null,
            "name": "run backend tests",
            "bash_command": "#!/bin/bash -eo pipefail\n. /srv/zulip-py3-venv/bin/activate\nmispipe ./tools/ci/backend ts\n",
            "status": "failed",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:42:55.898Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "start_time": "2020-06-12T13:41:22.501Z",
            "background": false,
            "exit_code": 1,
            "insignificant": false,
            "canceled": null,
            "step": 111,
            "run_time_millis": 93397,
            "has_output": true
          }
        ]
      },
      {
        "name": "Uploading artifacts",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Uploading artifacts",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:42:55.918Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "start_time": "2020-06-12T13:42:55.903Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 112,
            "run_time_millis": 15,
            "has_output": true
          }
        ]
      },
      {
        "name": "Uploading artifacts",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Uploading artifacts",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:42:55.940Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "start_time": "2020-06-12T13:42:55.925Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 113,
            "run_time_millis": 15,
            "has_output": true
          }
        ]
      },
      {
        "name": "Uploading artifacts",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Uploading artifacts",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:42:56.031Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "start_time": "2020-06-12T13:42:55.945Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 114,
            "run_time_millis": 86,
            "has_output": true
          }
        ]
      },
      {
        "name": "Uploading test results",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Uploading test results",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:42:56.051Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "start_time": "2020-06-12T13:42:56.036Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 115,
            "run_time_millis": 15,
            "has_output": true
          }
        ]
      },
      {
        "name": "On fail",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "On fail",
            "bash_command": "#!/bin/bash -eo pipefail\nif [[ \"$CIRCLE_REPOSITORY_URL\" == \"git@github.com:zulip/zulip.git\" ]]; then\n  curl  -H \"Content-Type: application/json\" \\\n  -X POST -i 'https://chat.zulip.org/api/v1/external/circleci?api_key='\"$ZULIP_BOT_KEY\"'&stream=automated%20testing&topic=master%20failing' \\\n  -d '{\"payload\": { \"branch\": \"'\"$CIRCLE_BRANCH\"'\", \"reponame\": \"'\"$CIRCLE_PROJECT_REPONAME\"'\", \"status\": \"failed\", \"build_url\": \"'\"$CIRCLE_BUILD_URL\"'\", \"username\": \"'\"$CIRCLE_USERNAME\"'\"}}'\nfi\n",
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:42:56.071Z",
            "type": "test",
            "allocation_id": "5ee3844efd7aa57cd91af13a-0-build/5478EF76",
            "start_time": "2020-06-12T13:42:56.058Z",
            "background": false,
            "exit_code": 0,
            "insignificant": false,
            "canceled": null,
            "step": 116,
            "run_time_millis": 13,
            "has_output": false
          }
        ]
      }
    ],
    "body": "",
    "usage_queued_at": "2020-06-12T13:34:07.005Z",
    "context_ids": [],
    "fail_reason": null,
    "retry_of": null,
    "reponame": "zulip",
    "ssh_users": [],
    "build_url": "https://circleci.com/gh/Hypro999/zulip/1429",
    "parallel": 1,
    "failed": true,
    "branch": "circleci",
    "username": "Hypro999",
    "author_date": "2020-06-12T13:33:46.000Z",
    "why": "github",
    "user": {
      "is_user": true,
      "login": "Hypro999",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29123352?v=4",
      "name": "Hemanth V. Alluri",
      "vcs_type": "github",
      "id": 29123352
    },
    "vcs_revision": "5326f9ea4084a01cc2bf1a461b9ad819b4ffdd14",
    "workflows": {
      "job_name": "bionic-backend-frontend",
      "job_id": "67650e47-d240-4db6-b2ed-304ca6dfde26",
      "workflow_id": "a2522997-5337-41a7-b9fe-07fc03724b12",
      "workspace_id": "a2522997-5337-41a7-b9fe-07fc03724b12",
      "upstream_job_ids": [],
      "upstream_concurrency_map": {},
      "workflow_name": "Ubuntu 18.04 Bionic (Python 3.6, backend+frontend)"
    },
    "owners": [
      "Hypro999"
    ],
    "vcs_tag": null,
    "pull_requests": [],
    "build_num": 1429,
    "infrastructure_fail": false,
    "committer_email": "hdrive1999@gmail.com",
    "has_artifacts": true,
    "previous": {
      "build_num": 1428,
      "status": "success",
      "build_time_millis": 29397
    },
    "status": "failed",
    "committer_name": "Hemanth V. Alluri",
    "retries": null,
    "subject": "circleci: Add temp untested progress to get fixtures for failure.",
    "vcs_type": "github",
    "timedout": false,
    "dont_build": null,
    "lifecycle": "finished",
    "no_dependency_cache": false,
    "stop_time": "2020-06-12T13:42:56.123Z",
    "ssh_disabled": true,
    "build_time_millis": 307240,
    "picard": {
      "build_agent": {
        "image": "circleci/picard@sha256:847ae88f32aaf7cfc04321b3eb25a7519630a949cf35df0d0b77ea1d7e886bd3",
        "properties": {
          "instance_ip": "172.16.89.195",
          "build_agent": "1.0.34234-27aa9735",
          "executor": "docker",
          "nomad_ami": "ami-07194a5d4dd689502",
          "availability_zone": "us-east-1c",
          "instance_id": "i-0fddc2be4c7ebe0b7"
        }
      },
      "resource_class": {
        "cpu": 2,
        "ram": 4096,
        "class": "medium",
        "name": "Docker Medium"
      },
      "executor": "docker"
    },
    "circle_yml": {},
    "messages": [],
    "is_first_green_build": false,
    "job_name": null,
    "start_time": "2020-06-12T13:37:48.883Z",
    "canceler": null,
    "all_commit_details": [
      {
        "committer_date": "2020-06-12T13:33:35.000Z",
        "body": "",
        "branch": "circleci",
        "author_date": "2020-06-12T13:33:35.000Z",
        "committer_email": "hdrive1999@gmail.com",
        "commit": "73900eeb69adbf0b83dc487e8eda90661b524eff",
        "committer_login": "Hypro999",
        "committer_name": "Hemanth V. Alluri",
        "subject": "Modify CircleCI config for live-ish testing.",
        "commit_url": "https://github.com/Hypro999/zulip/commit/73900eeb69adbf0b83dc487e8eda90661b524eff",
        "author_login": "Hypro999",
        "author_name": "Hemanth V. Alluri",
        "author_email": "hdrive1999@gmail.com"
      },
      {
        "committer_date": "2020-06-12T13:33:46.000Z",
        "body": "",
        "branch": "circleci",
        "author_date": "2020-06-12T13:33:46.000Z",
        "committer_email": "hdrive1999@gmail.com",
        "commit": "5326f9ea4084a01cc2bf1a461b9ad819b4ffdd14",
        "committer_login": "Hypro999",
        "committer_name": "Hemanth V. Alluri",
        "subject": "circleci: Add temp untested progress to get fixtures for failure.",
        "commit_url": "https://github.com/Hypro999/zulip/commit/5326f9ea4084a01cc2bf1a461b9ad819b4ffdd14",
        "author_login": "Hypro999",
        "author_name": "Hemanth V. Alluri",
        "author_email": "hdrive1999@gmail.com"
      }
    ],
    "platform": "2.0",
    "outcome": "failed",
    "vcs_url": "https://github.com/Hypro999/zulip",
    "author_name": "Hemanth V. Alluri",
    "node": null,
    "queued_at": "2020-06-12T13:37:44.274Z",
    "canceled": false,
    "author_email": "hdrive1999@gmail.com"
  }
}
