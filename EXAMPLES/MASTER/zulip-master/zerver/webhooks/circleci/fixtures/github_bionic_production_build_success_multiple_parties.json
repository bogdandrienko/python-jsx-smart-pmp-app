{
  "payload": {
    "compare": null,
    "previous_successful_build": {
      "build_num": 1422,
      "status": "success",
      "build_time_millis": 40755
    },
    "build_parameters": {
      "CIRCLE_JOB": "bionic-production-build"
    },
    "oss": true,
    "all_commit_details_truncated": false,
    "committer_date": "2020-06-12T13:33:46.000Z",
    "steps": [
      {
        "name": "Spin Up Environment",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Spin Up Environment",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:43:15.728Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:42:58.439Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 0,
            "run_time_millis": 17289,
            "has_output": true
          }
        ]
      },
      {
        "name": "Preparing Environment Variables",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Preparing Environment Variables",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:43:16.016Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:43:15.999Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 99,
            "run_time_millis": 17,
            "has_output": true
          }
        ]
      },
      {
        "name": "Checkout code",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Checkout code",
            "bash_command": "#!/bin/sh\nset -e\n\n# Workaround old docker images with incorrect $HOME\n# check https://github.com/docker/docker/issues/2968 for details\nif [ \"${HOME}\" = \"/\" ]\nthen\n  export HOME=$(getent passwd $(id -un) | cut -d: -f6)\nfi\n\necho Using SSH Config Dir $SSH_CONFIG_DIR\n\nmkdir -p $SSH_CONFIG_DIR\n\necho 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\nbitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\n' >> $SSH_CONFIG_DIR/known_hosts\n\n(umask 077; touch $SSH_CONFIG_DIR/id_rsa)\nchmod 0600 $SSH_CONFIG_DIR/id_rsa\n(cat <<EOF > $SSH_CONFIG_DIR/id_rsa\n$CHECKOUT_KEY\nEOF\n)\n\nexport GIT_SSH_COMMAND='ssh -i $SSH_CONFIG_DIR/id_rsa -o UserKnownHostsFile=$SSH_CONFIG_DIR/known_hosts'\n\n# use git+ssh instead of https\ngit config --global url.\"ssh://git@github.com\".insteadOf \"https://github.com\" || true\ngit config --global gc.auto 0 || true\n\nif [ -e /home/circleci/zulip/.git ]\nthen\n  cd /home/circleci/zulip\n  git remote set-url origin \"$CIRCLE_REPOSITORY_URL\" || true\nelse\n  mkdir -p /home/circleci/zulip\n  cd /home/circleci/zulip\n  git clone \"$CIRCLE_REPOSITORY_URL\" .\nfi\n\nif [ -n \"$CIRCLE_TAG\" ]\nthen\n  git fetch --force origin \"refs/tags/${CIRCLE_TAG}\"\nelse\n  git fetch --force origin \"circleci:remotes/origin/circleci\"\nfi\n\n\nif [ -n \"$CIRCLE_TAG\" ]\nthen\n  git reset --hard \"$CIRCLE_SHA1\"\n  git checkout -q \"$CIRCLE_TAG\"\nelif [ -n \"$CIRCLE_BRANCH\" ]\nthen\n  git reset --hard \"$CIRCLE_SHA1\"\n  git checkout -q -B \"$CIRCLE_BRANCH\"\nfi\n\ngit reset --hard \"$CIRCLE_SHA1\"",
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:43:29.100Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:43:16.027Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 101,
            "run_time_millis": 13073,
            "has_output": true
          }
        ]
      },
      {
        "name": "create cache directories",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "create cache directories",
            "bash_command": "#!/bin/bash -eo pipefail\ndirs=(/srv/zulip-{npm,venv,emoji}-cache)\nsudo mkdir -p \"${dirs[@]}\"\nsudo chown -R circleci \"${dirs[@]}\"\n",
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:43:29.131Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "start_time": "2020-06-12T13:43:29.109Z",
            "background": false,
            "exit_code": 0,
            "insignificant": false,
            "canceled": null,
            "step": 102,
            "run_time_millis": 22,
            "has_output": false
          }
        ]
      },
      {
        "name": "do Bionic hack",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "do Bionic hack",
            "bash_command": "#!/bin/bash -eo pipefail\n# Temporary hack till `sudo service redis-server start` gets fixes in Bionic. See\n# https://chat.zulip.org/#narrow/stream/3-backend/topic/Ubuntu.20bionic.20CircleCI\nsudo sed -i '/^bind/s/bind.*/bind 0.0.0.0/' /etc/redis/redis.conf\n",
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:43:29.152Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "start_time": "2020-06-12T13:43:29.139Z",
            "background": false,
            "exit_code": 0,
            "insignificant": false,
            "canceled": null,
            "step": 103,
            "run_time_millis": 13,
            "has_output": false
          }
        ]
      },
      {
        "name": "Restoring Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Restoring Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:43:55.446Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:43:29.161Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 104,
            "run_time_millis": 26285,
            "has_output": true
          }
        ]
      },
      {
        "name": "Restoring Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Restoring Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:44:16.256Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:43:55.450Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 105,
            "run_time_millis": 20806,
            "has_output": true
          }
        ]
      },
      {
        "name": "Restoring Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Restoring Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:44:17.502Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:44:16.261Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 106,
            "run_time_millis": 1241,
            "has_output": true
          }
        ]
      },
      {
        "name": "build production",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "build production",
            "bash_command": "#!/bin/bash -eo pipefail\nsudo apt-get update\n# Install moreutils so we can use `ts` and `mispipe` in the following.\nsudo apt-get install -y moreutils\n\nmispipe ./tools/ci/production-build ts\n",
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:46:02.606Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:44:17.507Z",
            "background": false,
            "exit_code": 0,
            "insignificant": false,
            "canceled": null,
            "step": 107,
            "run_time_millis": 105099,
            "has_output": true
          }
        ]
      },
      {
        "name": "Saving Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Saving Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:46:02.648Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:46:02.611Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 108,
            "run_time_millis": 37,
            "has_output": true
          }
        ]
      },
      {
        "name": "Saving Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Saving Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:46:02.700Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:46:02.654Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 109,
            "run_time_millis": 46,
            "has_output": true
          }
        ]
      },
      {
        "name": "Saving Cache",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Saving Cache",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:46:02.728Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "output_url": "https://circle-production-action-output.s3.amazonaws.com/redacted",
            "start_time": "2020-06-12T13:46:02.706Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 110,
            "run_time_millis": 22,
            "has_output": true
          }
        ]
      },
      {
        "name": "Persisting to Workspace",
        "actions": [
          {
            "truncated": false,
            "index": 0,
            "parallel": true,
            "failed": null,
            "infrastructure_fail": null,
            "name": "Persisting to Workspace",
            "bash_command": null,
            "status": "success",
            "timedout": null,
            "continue": null,
            "end_time": "2020-06-12T13:46:06.549Z",
            "type": "test",
            "allocation_id": "5ee3844fa5252234d1078954-0-build/2370AFED",
            "start_time": "2020-06-12T13:46:02.733Z",
            "background": false,
            "exit_code": null,
            "insignificant": false,
            "canceled": null,
            "step": 111,
            "run_time_millis": 3816,
            "has_output": true
          }
        ]
      }
    ],
    "body": "",
    "usage_queued_at": "2020-06-12T13:34:07.373Z",
    "context_ids": [],
    "fail_reason": null,
    "retry_of": null,
    "reponame": "zulip",
    "ssh_users": [],
    "build_url": "https://circleci.com/gh/Hypro999/zulip/1431",
    "parallel": 1,
    "failed": false,
    "branch": "circleci",
    "username": "Hypro999",
    "author_date": "2020-06-12T13:33:46.000Z",
    "why": "github",
    "user": {
      "is_user": true,
      "login": "Hypro999",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29123352?v=4",
      "name": "Hemanth V. Alluri",
      "vcs_type": "github",
      "id": 29123352
    },
    "vcs_revision": "5326f9ea4084a01cc2bf1a461b9ad819b4ffdd14",
    "workflows": {
      "job_name": "bionic-production-build",
      "job_id": "6a97df3e-51eb-4113-bd80-27f8f4f57ee0",
      "workflow_id": "056072ea-9615-44fc-b574-7b4c06aa2c8e",
      "workspace_id": "056072ea-9615-44fc-b574-7b4c06aa2c8e",
      "upstream_job_ids": [],
      "upstream_concurrency_map": {},
      "workflow_name": "Production"
    },
    "owners": [
      "Hypro999"
    ],
    "vcs_tag": null,
    "pull_requests": [],
    "build_num": 1431,
    "infrastructure_fail": false,
    "committer_email": "hdrive1999@gmail.com",
    "has_artifacts": true,
    "previous": {
      "build_num": 1430,
      "status": "running",
      "build_time_millis": 215274
    },
    "status": "success",
    "committer_name": "Hemanth V. Alluri",
    "retries": null,
    "subject": "circleci: Add temp untested progress to get fixtures for failure.",
    "vcs_type": "github",
    "timedout": false,
    "dont_build": null,
    "lifecycle": "finished",
    "no_dependency_cache": false,
    "stop_time": "2020-06-12T13:46:06.600Z",
    "ssh_disabled": true,
    "build_time_millis": 188217,
    "picard": {
      "build_agent": {
        "image": "circleci/picard@sha256:847ae88f32aaf7cfc04321b3eb25a7519630a949cf35df0d0b77ea1d7e886bd3",
        "properties": {
          "build_agent": "1.0.34234-27aa9735",
          "executor": "docker",
          "nomad_ami": "ami-07194a5d4dd689502",
          "availability_zone": "us-east-1c",
          "instance_id": "i-0cbbcd49e6d003611",
          "instance_ip": "172.16.88.17"
        }
      },
      "resource_class": {
        "cpu": 2,
        "ram": 4096,
        "class": "medium",
        "name": "Docker Medium"
      },
      "executor": "docker"
    },
    "circle_yml": {},
    "messages": [],
    "is_first_green_build": false,
    "job_name": null,
    "start_time": "2020-06-12T13:42:58.383Z",
    "canceler": null,
    "all_commit_details": [
      {
        "committer_date": "2020-06-12T13:33:35.000Z",
        "body": "",
        "branch": "circleci",
        "author_date": "2020-06-12T13:33:35.000Z",
        "committer_email": "sadaharu@yorozuya.jp",
        "commit": "73900eeb69adbf0b83dc487e8eda90661b524eff",
        "committer_login": null,
        "committer_name": "Sadaharu",
        "subject": "Modify CircleCI config for live-ish testing.",
        "commit_url": "https://github.com/Hypro999/zulip/commit/73900eeb69adbf0b83dc487e8eda90661b524eff",
        "author_login": "Hypro999",
        "author_name": "Hemanth V. Alluri",
        "author_email": "hdrive1999@gmail.com"
      },
      {
        "committer_date": "2020-06-12T13:33:46.000Z",
        "body": "",
        "branch": "circleci",
        "author_date": "2020-06-12T13:33:46.000Z",
        "committer_email": "hdrive1999@gmail.com",
        "commit": "5326f9ea4084a01cc2bf1a461b9ad819b4ffdd14",
        "committer_login": "Hypro999",
        "committer_name": "Hemanth V. Alluri",
        "subject": "circleci: Add temp untested progress to get fixtures for failure.",
        "commit_url": "https://github.com/ShiroYasha999/zulip/commit/5326f9ea4084a01cc2bf1a461b9ad819b4ffdd14",
        "author_login": "ShiroYasha999",
        "author_name": "Gintoki Sakata",
        "author_email": "sakata_gintoki@yorozuya.jp"
      }
    ],
    "platform": "2.0",
    "outcome": "success",
    "vcs_url": "https://github.com/Hypro999/zulip",
    "author_name": "Hemanth V. Alluri",
    "node": null,
    "queued_at": "2020-06-12T13:42:56.155Z",
    "canceled": false,
    "author_email": "hdrive1999@gmail.com"
  }
}
