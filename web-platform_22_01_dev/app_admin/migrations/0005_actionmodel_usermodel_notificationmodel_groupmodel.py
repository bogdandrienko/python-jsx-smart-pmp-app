# Generated by Django 4.0 on 2022-01-10 19:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0017_remove_examplesmodel_foreign_key_field_and_more'),
        ('app_admin', '0004_rename_moduleorcomponentmodel_modulesmodel_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_slug_field', models.SlugField(blank=True, choices=[('0_main', 'Основное'), ('1_module', 'Модуль'), ('2_section', 'Секция'), ('3_component', 'Компонент'), ('4_utils', 'Вспомогательное')], db_column='type_slug_field_db_column', db_tablespace='type_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">Строка текста валидная для ссылок и системных вызовов, example: "success"</small><hr><br>', max_length=128, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Тип:')),
                ('name_char_field', models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">кириллица, любой регистр, можно с пробелами, например: "Модератор отдела ОУПиБП"</small><hr><br>', max_length=128, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Имя действия для отображения')),
                ('name_slug_field', models.SlugField(blank=True, db_column='name_slug_field_db_column', db_tablespace='name_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">латинница, нижний регистр, без пробелов, например: "moderator_oupibp"</small><hr><br>', max_length=128, null=True, unique=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Имя действия для валидации и ссылок')),
            ],
            options={
                'verbose_name': 'Действия',
                'verbose_name_plural': 'Действия',
                'db_table': 'actions_admin_model_table',
                'ordering': ('type_slug_field', 'name_char_field'),
            },
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password_slug_field', models.SlugField(blank=True, db_column='password_slug_field_db_column', db_tablespace='password_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">password_slug_field</small><hr><br>', max_length=16, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(8), django.core.validators.MaxLengthValidator(16)], verbose_name='Пароль от аккаунта пользователя')),
                ('activity_boolean_field', models.BooleanField(blank=True, db_column='activity_boolean_field_db_column', db_index=True, db_tablespace='activity_boolean_field_db_tablespace', default=True, error_messages=False, help_text='<small class="text-muted">activity_boolean_field</small><hr><br>', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Активность аккаунта пользователя')),
                ('email_field', models.EmailField(blank=True, db_column='email_field_db_column', db_index=True, db_tablespace='email_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">Строка содержащая почту, example: "bogdandrienko@gmail.com"</small><hr><br>', max_length=254, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(254)], verbose_name='email_field')),
                ('secret_question_char_field', models.CharField(blank=True, db_column='secret_question_char_field_db_column', db_index=True, db_tablespace='secret_question_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">secret_question_char_field</small><hr><br>', max_length=32, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(32)], verbose_name='Секретный вопрос')),
                ('secret_answer_char_field', models.CharField(blank=True, db_column='secret_answer_char_field_db_column', db_index=True, db_tablespace='secret_answer_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">secret_answer_char_field</small><hr><br>', max_length=16, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(16)], verbose_name='Секретный ответ')),
                ('last_name_char_field', models.CharField(blank=True, db_column='last_name_char_field_db_column', db_index=True, db_tablespace='last_name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">last_name_char_field</small><hr><br>', max_length=32, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(32)], verbose_name='Фамилия')),
                ('first_name_char_field', models.CharField(blank=True, db_column='first_char_field_db_column', db_index=True, db_tablespace='first_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">first_char_field</small><hr><br>', max_length=32, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(32)], verbose_name='Имя')),
                ('patronymic_char_field', models.CharField(blank=True, db_column='patronymic_char_field_db_column', db_index=True, db_tablespace='patronymic_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">patronymic_char_field</small><hr><br>', max_length=32, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(32)], verbose_name='Отчество')),
                ('personnel_number_slug_field', models.SlugField(blank=True, db_column='personnel_number_slug_field_db_column', db_tablespace='personnel_number_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">personnel_number_slug_field</small><hr><br>', max_length=32, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(32)], verbose_name='Табельный номер')),
                ('subdivision_char_field', models.CharField(blank=True, db_column='subdivision_char_field_db_column', db_index=True, db_tablespace='subdivision_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">subdivision_char_field</small><hr><br>', max_length=64, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(64)], verbose_name='Подразделение')),
                ('workshop_service_char_field', models.CharField(blank=True, db_column='workshop_service_char_field_db_column', db_index=True, db_tablespace='workshop_service_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">workshop_service_char_field</small><hr><br>', max_length=64, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(64)], verbose_name='Цех/Служба')),
                ('department_site_char_field', models.CharField(blank=True, db_column='department_site_char_field_db_column', db_index=True, db_tablespace='department_site_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">department_site_char_field</small><hr><br>', max_length=64, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(64)], verbose_name='Отдел/Участок')),
                ('position_char_field', models.CharField(blank=True, db_column='position_char_field_db_column', db_index=True, db_tablespace='position_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">position_char_field</small><hr><br>', max_length=64, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(64)], verbose_name='Должность')),
                ('category_char_field', models.CharField(blank=True, db_column='category_char_field_db_column', db_index=True, db_tablespace='category_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">category_char_field</small><hr><br>', max_length=64, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(64)], verbose_name='Категория')),
                ('education_text_field', models.TextField(blank=True, db_column='education_text_field_db_column', db_index=True, db_tablespace='education_text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">education_text_field</small><hr><br>', max_length=512, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(512)], verbose_name='Образование')),
                ('achievements_text_field', models.TextField(blank=True, db_column='achievements_text_field_db_column', db_index=True, db_tablespace='achievements_text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">achievements_text_field</small><hr><br>', max_length=512, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(512)], verbose_name='Достижения')),
                ('biography_text_field', models.TextField(blank=True, db_column='biography_text_field_db_column', db_index=True, db_tablespace='biography_text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">biography_text_field</small><hr><br>', max_length=512, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(512)], verbose_name='Биография')),
                ('hobbies_text_field', models.TextField(blank=True, db_column='hobbies_text_field_db_column', db_index=True, db_tablespace='hobbies_text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">hobbies_text_field</small><hr><br>', max_length=512, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(512)], verbose_name='Увлечения')),
                ('image_field', models.ImageField(blank=True, db_column='image_field_db_column', db_index=True, db_tablespace='image_field_db_tablespace', default='admin/account/default_avatar.jpg', error_messages=False, help_text='<small class="text-muted">image_field_db_column</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, upload_to='uploads/admin/account/avatar', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png'])], verbose_name='Изображение профиля пользователя')),
                ('user_foreign_key_field', models.ForeignKey(blank=True, db_column='user_foreign_key_field_db_column', db_tablespace='user_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">Связь, с каким-либо пользователем, example: "to=User.objects.get(username="Bogdan")"</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.user', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Пользователь:')),
            ],
            options={
                'verbose_name': 'Пользователь расширенный',
                'verbose_name_plural': 'Пользователи расширение',
                'db_table': 'user_extend_admin_model_table',
                'ordering': ('last_name_char_field', 'first_name_char_field', 'patronymic_char_field'),
            },
        ),
        migrations.CreateModel(
            name='NotificationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_slug_field', models.SlugField(blank=True, choices=[('errors', 'Ошибки'), ('notifications', 'Уведомления'), ('messages', 'Сообщения')], db_column='type_slug_field_db_column', db_tablespace='type_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">полный путь от класса до функции вызова цикла модуля</small><hr><br>', max_length=128, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Путь модуля:')),
                ('name_char_field', models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">кириллица, любой регистр, можно с пробелами, например: "Модератор отдела ОУПиБП"</small><hr><br>', max_length=128, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Имя группы для отображения')),
                ('text_field', models.TextField(blank=True, db_column='text_field_db_column', db_index=True, db_tablespace='text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">Много текста, example: "текст, текст..."</small><hr><br>', max_length=1024, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(1024)], verbose_name='text_field')),
                ('status_boolean_field', models.BooleanField(blank=True, db_column='status_boolean_field_db_column', db_index=True, db_tablespace='status_boolean_field_db_tablespace', default=False, error_messages=False, help_text='<small class="text-muted">Значение правда или ложь, example: "True" / "False"</small><hr><br>', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Статус: ')),
                ('created_datetime_field', models.DateTimeField(blank=True, db_column='created_datetime_field_db_column', db_index=True, db_tablespace='created_datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">created_datetime_field</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Дата создания')),
                ('decision_datetime_field', models.DateTimeField(blank=True, db_column='decision_datetime_field_db_column', db_index=True, db_tablespace='decision_datetime_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">register_datetime_field</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Дата решения')),
                ('user_foreign_key_field', models.ForeignKey(blank=True, db_column='user_foreign_key_field_db_column', db_tablespace='user_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">Связь, с какой-либо группой, example: "to=Group.objects.get(name="User")"</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_admin.usermodel', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Пользователь:')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
                'db_table': 'notification_admin_model_table',
                'ordering': ('created_datetime_field', 'user_foreign_key_field', 'type_slug_field'),
            },
        ),
        migrations.CreateModel(
            name='GroupModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_char_field', models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">кириллица, любой регистр, можно с пробелами, например: "Модератор отдела ОУПиБП"</small><hr><br>', max_length=128, null=True, unique=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Имя группы для отображения')),
                ('name_slug_field', models.SlugField(blank=True, db_column='name_slug_field_db_column', db_tablespace='name_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">латинница, нижний регистр, без пробелов, например: "moderator_oupibp"</small><hr><br>', max_length=128, null=True, unique=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(128)], verbose_name='Имя группы для валидации и ссылок')),
                ('position_float_field', models.FloatField(blank=True, db_column='position_float_field_db_column', db_index=True, db_tablespace='position_float_field_db_tablespace', default=1.0, error_messages=False, help_text='<small class="text-muted">Число с плавающей запятой, example: "0.0"</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinValueValidator(-1000), django.core.validators.MaxValueValidator(1000)], verbose_name='Позиция в админ-панели:')),
                ('action_many_to_many_field', models.ManyToManyField(blank=True, db_column='path_many_to_many_field_db_column', db_index=True, db_tablespace='path_many_to_many_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted underline">Связь, с каким-либо пользователем, example: "to=User.objects.get(username="Bogdan")"</small><hr><br>', related_name='action_many_to_many_field', to='app_admin.ActionModel', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Разрешённые действия группы')),
                ('group_foreign_key_field', models.ForeignKey(blank=True, db_column='group_foreign_key_field_db_column', db_tablespace='group_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">Связь, с какой-либо группой, example: "to=Group.objects.get(name="User")"</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.group', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Группа:')),
                ('user_many_to_many_field', models.ManyToManyField(blank=True, db_column='user_many_to_many_field_db_column', db_index=True, db_tablespace='user_many_to_many_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted underline">Связь, с каким-либо пользователем, example: "to=User.objects.get(username="Bogdan")"</small><hr><br>', related_name='user_many_to_many_field', to='app_admin.UserModel', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Пользователи группы')),
            ],
            options={
                'verbose_name': 'Группа расширенная',
                'verbose_name_plural': 'Группы расширение',
                'db_table': 'group_extend_admin_model_table',
                'ordering': ('position_float_field', 'name_char_field', 'name_slug_field'),
            },
        ),
    ]
