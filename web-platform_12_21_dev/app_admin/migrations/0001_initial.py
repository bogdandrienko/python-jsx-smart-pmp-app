# Generated by Django 3.2.9 on 2021-11-28 17:44

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0013_actionmodel_examplesmodel_groupmodel_loggingmodel_usermodel'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountTemplateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(max_length=50, unique=True, verbose_name='название')),
                ('template_slug', models.SlugField(unique=True, verbose_name='ссылка')),
                ('template_description', models.TextField(blank=True, verbose_name='описание')),
                ('template_addition_file_1', models.FileField(blank=True, null=True, upload_to='uploads/documents/%d_%m_%Y/%H_%M_%S', verbose_name='приложение 1')),
                ('template_addition_file_2', models.FileField(blank=True, null=True, upload_to='uploads/documents/%d_%m_%Y/%H_%M_%S', verbose_name='приложение 2')),
            ],
            options={
                'verbose_name': 'Шаблон',
                'verbose_name_plural': 'Шаблоны',
                'db_table': 'account_template_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='ApplicationModuleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_position', models.IntegerField(verbose_name='позиция')),
                ('module_name', models.CharField(max_length=50, unique=True, verbose_name='название')),
                ('module_slug', models.CharField(max_length=50, verbose_name='ссылка')),
                ('module_image', models.ImageField(blank=True, upload_to='uploads/application/module', verbose_name='картинка')),
                ('module_description', models.CharField(blank=True, max_length=100, verbose_name='описание')),
            ],
            options={
                'verbose_name': 'Модуль',
                'verbose_name_plural': 'Модули',
                'db_table': 'application_module_table',
                'ordering': ('module_position',),
            },
        ),
        migrations.CreateModel(
            name='ArticleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_title', models.CharField(max_length=200, verbose_name='название статьи')),
                ('article_text', models.TextField(blank=True, verbose_name='текст статьи')),
                ('article_pub_date', models.DateTimeField(auto_now_add=True)),
                ('article_image', models.ImageField(blank=True, upload_to='app_news/', verbose_name='картинка статьи')),
                ('article_rating_positive', models.IntegerField(default=0, verbose_name='лайки статьи')),
                ('article_rating_negative', models.IntegerField(default=0, verbose_name='дизлайки статьи')),
                ('article_rating_value', models.IntegerField(default=0, verbose_name='рейтинг статьи')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
                'db_table': 'article_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='CategoryRationalModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=50, unique=True, verbose_name='название')),
                ('category_slug', models.SlugField(unique=True, verbose_name='ссылка')),
                ('category_description', models.TextField(blank=True, verbose_name='описание')),
                ('category_image', models.ImageField(blank=True, upload_to='uploads/rational/category', verbose_name='картинка')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'category_rational_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='CityModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='город')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'db_table': 'city_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='ContactModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_name', models.CharField(max_length=50, unique=True, verbose_name='название')),
                ('contact_slug', models.SlugField(unique=True, verbose_name='ссылка')),
                ('contact_description', models.TextField(blank=True, verbose_name='описание')),
                ('contact_image', models.ImageField(blank=True, upload_to='uploads/contact', verbose_name='картинка')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
                'db_table': 'contact_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DocumentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=50, unique=True, verbose_name='название')),
                ('document_slug', models.SlugField(unique=True, verbose_name='ссылка')),
                ('document_description', models.TextField(blank=True, verbose_name='описание')),
                ('document_addition_file_1', models.FileField(blank=True, null=True, upload_to='uploads/documents/%d_%m_%Y/%H_%M_%S', verbose_name='приложение 1')),
                ('document_addition_file_2', models.FileField(blank=True, null=True, upload_to='uploads/documents/%d_%m_%Y/%H_%M_%S', verbose_name='приложение 2')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
                'db_table': 'document_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='EmailModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Email_subject', models.CharField(max_length=100, verbose_name='тема')),
                ('Email_message', models.CharField(max_length=100, verbose_name='тема')),
                ('Email_email', models.CharField(max_length=100, verbose_name='тема')),
                ('Email_date', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
            ],
            options={
                'verbose_name': 'Письмо',
                'verbose_name_plural': 'Письма',
                'db_table': 'email_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='IdeaModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_char_field', models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">name_char_field</small><hr><br>', max_length=32, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(32)], verbose_name='Название')),
                ('category_slug_field', models.SlugField(blank=True, choices=[('innovation', 'Инновации'), ('optimization', 'Оптимизации'), ('industry', 'Индустрия 4.0'), ('other', 'Другое')], db_column='category_slug_field_db_column', db_tablespace='category_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">category_slug_field</small><hr><br>', max_length=16, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(16)], verbose_name='Категория')),
                ('short_description_char_field', models.CharField(blank=True, db_column='short_description_char_field_db_column', db_index=True, db_tablespace='short_description_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">short_description_char_field</small><hr><br>', max_length=64, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(64)], verbose_name='Краткое описание')),
                ('full_description_text_field', models.TextField(blank=True, db_column='full_description_text_field_db_column', db_index=True, db_tablespace='full_description_text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">full_description_text_field</small><hr><br>', max_length=1024, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(1024)], verbose_name='Полное описание')),
                ('avatar_image_field', models.ImageField(blank=True, db_column='avatar_image_field_db_column', db_index=True, db_tablespace='avatar_image_field_db_tablespace', default='uploads/idea/default_avatar.jpg', error_messages=False, help_text='<small class="text-muted">>avatar_image_field</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, upload_to='uploads/idea/avatar/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png'])], verbose_name='Аватарка-заставка для идеи')),
                ('addiction_file_field', models.FileField(blank=True, db_column='addiction_file_field_db_column', db_index=True, db_tablespace='addiction_file_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">addiction_file_field</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, upload_to='uploads/idea/files/', validators=[django.core.validators.FileExtensionValidator(['xlsx', 'xls', 'docx', 'doc', 'pdf'])], verbose_name='Файл-приложение')),
                ('visibility_boolean_field', models.BooleanField(blank=True, db_column='visibility_boolean_field_db_column', db_index=True, db_tablespace='visibility_boolean_field_db_tablespace', default=False, error_messages=False, help_text='<small class="text-muted">visibility_boolean_field</small><hr><br>', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Видимость идеи в общем списке')),
                ('created_datetime_field', models.DateTimeField(blank=True, db_column='created_datetime_field_db_column', db_index=True, db_tablespace='created_datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">created_datetime_field</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Дата создания')),
                ('register_datetime_field', models.DateTimeField(blank=True, db_column='register_datetime_field_db_column', db_index=True, db_tablespace='register_datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">register_datetime_field</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Дата регистрации')),
                ('author_foreign_key_field', models.ForeignKey(blank=True, db_column='author_foreign_key_field_db_column', db_tablespace='author_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">author_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.usermodel', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Идея',
                'verbose_name_plural': '0_Идеи',
                'db_table': 'idea_model_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='IdeasCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=50, unique=True, verbose_name='название')),
                ('category_slug', models.SlugField(unique=True, verbose_name='ссылка')),
                ('category_description', models.TextField(blank=True, verbose_name='описание')),
                ('category_image', models.ImageField(blank=True, upload_to='uploads/rational/category', verbose_name='картинка')),
            ],
            options={
                'verbose_name': 'Категория в банке идей',
                'verbose_name_plural': 'Категории в банке идей',
                'db_table': 'ideas_category_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='MessageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_name', models.CharField(max_length=50, verbose_name='название')),
                ('message_slug', models.CharField(max_length=50, verbose_name='кому')),
                ('message_description', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
                'db_table': 'message_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='SmsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_description', models.TextField(blank=True, verbose_name='текст сообщения')),
                ('sms_date', models.DateTimeField(auto_now_add=True, verbose_name='дата отправки')),
                ('sms_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='автор сообщения')),
            ],
            options={
                'verbose_name': 'Смс',
                'verbose_name_plural': 'Смс',
                'db_table': 'sms_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='RationalModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rational_date_certification', models.DateTimeField(auto_created=True, blank=True, default=django.utils.timezone.now, verbose_name='дата получения удостоверения на предложение')),
                ('rational_date_registered', models.DateTimeField(auto_created=True, blank=True, default=django.utils.timezone.now, verbose_name='дата регистрации')),
                ('rational_structure_from', models.CharField(blank=True, max_length=50, verbose_name='имя подразделения')),
                ('rational_uid_registered', models.IntegerField(blank=True, default=0, verbose_name='номер регистрации')),
                ('rational_name', models.CharField(max_length=50, verbose_name='название статьи')),
                ('rational_place_innovation', models.CharField(blank=True, max_length=100, verbose_name='место внедрения')),
                ('rational_description', ckeditor.fields.RichTextField(blank=True, verbose_name='описание')),
                ('rational_addition_file_1', models.FileField(blank=True, null=True, upload_to='uploads/rational/%d_%m_%Y/%H_%M_%S', verbose_name='приложение 1')),
                ('rational_addition_file_2', models.FileField(blank=True, null=True, upload_to='uploads/rational/%d_%m_%Y/%H_%M_%S', verbose_name='приложение 2')),
                ('rational_addition_file_3', models.FileField(blank=True, null=True, upload_to='uploads/rational/%d_%m_%Y/%H_%M_%S', verbose_name='приложение 3')),
                ('rational_offering_members', ckeditor.fields.RichTextField(blank=True, default='<table align="left" border="2" cellpadding="2" cellspacing="2" style="width:1000px"><thead><tr><td><p>Фамилия, имя, отчество авторов</p></td><td><p>Место работы</p></td><td><p>Должность</p></td><td><p>Доля (%) участия*</p></td><td><p>Год рождения</p></td><td><p>Подпись**</p></thead><tbody><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table> ', verbose_name='предложившие участники')),
                ('rational_conclusion', ckeditor.fields.RichTextField(blank=True, default='<table align="left" border="2" cellpadding="2" cellspacing="2" style="width:1000px"><thead><tr><td><p>Название Структурного подразделения</p></td><td><p>Заключение</p></td><td><p>Должность, название отдела</p></td><td><p>Подпись</p></td></thead><tbody><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table> ', verbose_name='заключения по предложению')),
                ('rational_change_documentations', ckeditor.fields.RichTextField(blank=True, default='<table align="left" border="2" cellpadding="2" cellspacing="2" style="width:1000px"><thead><tr><td><p>Наименование документа</p></td><td><p>№ извещения</p></td><td><p>Дата изменения</p></td><td><p>Должность и название отдела</p></td><td><p>Подпись</p></td></thead><tbody><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table> ', verbose_name='изменение нормативной и тех. документации')),
                ('rational_resolution', models.CharField(blank=True, max_length=200, verbose_name='принятое решение')),
                ('rational_responsible_members', ckeditor.fields.RichTextField(blank=True, default='<table align="left" border="2" cellpadding="2" cellspacing="2" style="width:1000px"><thead><tr><td><p>ФИО сотрудника</p></td><td><p>Задачи, мероприятия</p></td><td><p>Сроки выполнения</p></td><td><p>Название подразделения, должность</p></td><td><p>Подпись ответственного сотрудника или его руководителя</p></td><td><p>Отметка о выполнении</p></thead><tbody><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table> ', verbose_name='ответственные участники')),
                ('rational_date_create', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('rational_addition_image', models.ImageField(blank=True, upload_to='uploads/rational/%d_%m_%Y/%H_%M_%S', verbose_name='картинка к предложению')),
                ('rational_status', models.BooleanField(blank=True, default=False, verbose_name='статус')),
                ('rational_author_name', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='имя автора')),
                ('rational_category', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_admin.categoryrationalmodel', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Рационализаторское предложение',
                'verbose_name_plural': 'Рационализаторские предложения',
                'db_table': 'rational_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='ProjectsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_char_field', models.CharField(blank=True, db_column='name_char_field_db_column', db_index=True, db_tablespace='name_char_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">кириллица, любой регистр, можно с пробелами, например: "Модератор отдела ОУПиБП"</small><hr><br>', max_length=32, null=True, unique=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(32)], verbose_name='Имя группы для отображения')),
                ('name_slug_field', models.SlugField(blank=True, db_column='name_slug_field_db_column', db_tablespace='name_slug_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">латинница, нижний регистр, без пробелов, например: "moderator_oupibp"</small><hr><br>', max_length=32, null=True, unique=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(32)], verbose_name='Имя группы для валидации и ссылок')),
                ('path_text_field', models.TextField(blank=True, db_column='path_text_field_db_column', db_index=True, db_tablespace='path_text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted underline">через запятую нужно перечислить имена путей для доступа, латинница, любой регистр, например: "login, admin, home"</small><hr><br>', max_length=256, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(256)], verbose_name='Имя путей для доступа')),
                ('boolean_field', models.BooleanField(blank=True, db_column='boolean_field_db_column', db_index=True, db_tablespace='boolean_field_db_tablespace', default=False, error_messages=False, help_text='<small class="text-muted">Значение правда или ложь, example: "True" / "False"</small><hr><br>', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='boolean_field')),
                ('integer_field', models.IntegerField(blank=True, db_column='integer_field_db_column', db_index=True, db_tablespace='integer_field_db_tablespace', default=0, error_messages=False, help_text='<small class="text-muted">Целочисленное значение от -2147483648 до 2147483647, example: "0"</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinValueValidator(-2147483648), django.core.validators.MaxValueValidator(2147483647)], verbose_name='integer_field')),
                ('float_field', models.FloatField(blank=True, db_column='float_field_db_column', db_index=True, db_tablespace='float_field_db_tablespace', default=0.0, error_messages=False, help_text='<small class="text-muted">Число с плавающей запятой, example: "0.0"</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinValueValidator(-1000), django.core.validators.MaxValueValidator(1000)], verbose_name='float_field')),
                ('datetime_field', models.DateTimeField(blank=True, db_column='datetime_field_db_column', db_index=True, db_tablespace='datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">Дата и время, example: "31.12.2021Т23:59:59"</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='datetime_field')),
                ('file_field', models.FileField(blank=True, db_column='file_field_db_column', db_index=True, db_tablespace='file_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">Файл, с расширением указанным в валидаторе, example: "example.xlsx"</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, upload_to='uploads/example/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['xlsx', 'xls'])], verbose_name='file_field')),
                ('image_field', models.ImageField(blank=True, db_column='image_field_db_column', db_index=True, db_tablespace='image_field_db_tablespace', default='uploads/example/example.jpg', error_messages=False, help_text='<small class="text-muted">>Файл, с расширением изображения, example: "example.jpg(/png/bpm...)"</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, upload_to='uploads/example/example.jpg', validators=[django.core.validators.FileExtensionValidator(['jpg'])], verbose_name='file_field')),
                ('foreign_key_field', models.ForeignKey(blank=True, db_column='foreign_key_field_db_column', db_tablespace='foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">Связь, с каким-либо объектом, example: "to=User.objects.get(username="Bogdan")"</small><hr><br>', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='foreign_key_field')),
                ('path_many_to_many_field', models.ManyToManyField(blank=True, db_column='path_many_to_many_field_db_column', db_index=True, db_tablespace='path_many_to_many_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted underline">Связь, с каким-либо пользователем, example: "to=User.objects.get(username="Bogdan")"</small><hr><br>', related_name='projects_model_path_many_to_many_field', to='auth.ActionModel', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Разрешённые действия группы')),
                ('user_many_to_many_field', models.ManyToManyField(blank=True, db_column='user_many_to_many_field_db_column', db_index=True, db_tablespace='user_many_to_many_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted underline">Связь, с каким-либо пользователем, example: "to=User.objects.get(username="Bogdan")"</small><hr><br>', related_name='projects_model_user_many_to_many_field', to='auth.UserModel', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Пользователи группы')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
                'db_table': 'projects_model_table',
                'ordering': ('name_char_field', 'name_slug_field'),
            },
        ),
        migrations.CreateModel(
            name='NotificationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_name', models.CharField(max_length=50, verbose_name='название')),
                ('notification_slug', models.CharField(max_length=50, verbose_name='ссылка')),
                ('notification_description', models.TextField(verbose_name='описание')),
                ('notification_date', models.DateTimeField(auto_now_add=True, verbose_name='дата и время')),
                ('notification_status', models.BooleanField(default=True, verbose_name='статус')),
                ('notification_author', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='имя автора')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
                'db_table': 'notification_table',
                'ordering': ('-notification_status', '-notification_date'),
            },
        ),
        migrations.CreateModel(
            name='LikeRationalModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_status', models.BooleanField(default=False, verbose_name='лайк/дизлайк')),
                ('like_date', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('like_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_admin.rationalmodel', verbose_name='предложение')),
                ('like_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='автор')),
            ],
            options={
                'verbose_name': 'Лайк',
                'verbose_name_plural': 'Лайки',
                'db_table': 'like_rational_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='IdeasModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_register', models.DateTimeField(auto_created=True, blank=True, null=True, verbose_name='Дата регистрации')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='Название')),
                ('short_description', models.CharField(blank=True, max_length=50, verbose_name='Короткое описание')),
                ('long_description', models.TextField(blank=True, verbose_name='Длинное описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/bankidea/%d_%m_%Y', verbose_name='Картинка к идеи')),
                ('document', models.FileField(blank=True, null=True, upload_to='uploads/bankidea/%d_%m_%Y', verbose_name='Документ к идеи')),
                ('status', models.BooleanField(blank=True, default=False, verbose_name='Статус отображения')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('category', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_admin.ideascategorymodel', verbose_name='Категория')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Идею',
                'verbose_name_plural': 'Банк идей',
                'db_table': 'ideas_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='IdeasLikeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_status', models.BooleanField(blank=True, default=False, verbose_name='Лайк/дизлайк')),
                ('like_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('like_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('like_idea', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_admin.ideasmodel', verbose_name='Идея')),
            ],
            options={
                'verbose_name': 'Лайк в банке идей',
                'verbose_name_plural': 'Лайки в банке идей',
                'db_table': 'ideas_like_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='IdeasCommentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField(verbose_name='Текст комментария')),
                ('comment_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('comment_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('comment_idea', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_admin.ideasmodel', verbose_name='Идея')),
            ],
            options={
                'verbose_name': 'Комментарий в банке идей',
                'verbose_name_plural': 'Комментарии в банке идей',
                'db_table': 'ideas_comment_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='IdeaRatingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_boolean_field', models.BooleanField(blank=True, db_column='status_boolean_field_db_column', db_index=True, db_tablespace='status_boolean_field_db_tablespace', default=True, error_messages=False, help_text='<small class="text-muted">status_boolean_field</small><hr><br>', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Лайк / дизлайк')),
                ('datetime_field', models.DateTimeField(blank=True, db_column='datetime_field_db_column', db_index=True, db_tablespace='datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">Дата и время, example: "31.12.2021Т23:59:59"</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Дата создания')),
                ('author_foreign_key_field', models.ForeignKey(blank=True, db_column='author_foreign_key_field_db_column', db_tablespace='author_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">author_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.usermodel', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Автор')),
                ('idea_foreign_key_field', models.ForeignKey(blank=True, db_column='idea_foreign_key_field_db_column', db_tablespace='idea_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">idea_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_admin.ideamodel', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Идея')),
            ],
            options={
                'verbose_name': 'Рейтинг',
                'verbose_name_plural': '1_Идеи_Рейтинги',
                'db_table': 'idea_rating_model_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='IdeaCommentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_field', models.TextField(blank=True, db_column='text_field_db_column', db_index=True, db_tablespace='text_field_db_tablespace', default='', error_messages=False, help_text='<small class="text-muted">text_field</small><hr><br>', max_length=512, null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(512)], verbose_name='Комментарий')),
                ('datetime_field', models.DateTimeField(blank=True, db_column='datetime_field_db_column', db_index=True, db_tablespace='datetime_field_db_tablespace', default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">Дата и время, example: "31.12.2021Т23:59:59"</small><hr><br>', null=True, unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Дата создания')),
                ('author_foreign_key_field', models.ForeignKey(blank=True, db_column='author_foreign_key_field_db_column', db_tablespace='author_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">author_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.usermodel', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Автор')),
                ('idea_foreign_key_field', models.ForeignKey(blank=True, db_column='idea_foreign_key_field_db_column', db_tablespace='idea_foreign_key_field_db_tablespace', default=None, error_messages=False, help_text='<small class="text-muted">idea_foreign_key_field</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_admin.ideamodel', unique_for_date=False, unique_for_month=False, unique_for_year=False, verbose_name='Идея')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': '1_Идеи_Комментарии',
                'db_table': 'idea_comment_model_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='CommentRationalModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField(verbose_name='текст')),
                ('comment_date', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('comment_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_admin.rationalmodel', verbose_name='предложение')),
                ('comment_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='автор')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'db_table': 'comment_rational_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='CommentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=50, verbose_name='имя автора')),
                ('comment_text', models.TextField(blank=True, verbose_name='текст комментария')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_admin.articlemodel')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'db_table': 'comment_table',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='ApplicationComponentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_position', models.IntegerField(verbose_name='позиция в списке закладок')),
                ('component_name', models.CharField(max_length=50, unique=True, verbose_name='название закладки')),
                ('component_slug', models.CharField(max_length=50, verbose_name='ссылка закладки')),
                ('component_image', models.ImageField(blank=True, upload_to='uploads/application/component', verbose_name='картинка закладки')),
                ('component_description', models.CharField(blank=True, max_length=100, verbose_name='описание закладки')),
                ('component_Foreign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_admin.applicationmodulemodel', verbose_name='модуль')),
            ],
            options={
                'verbose_name': 'Компонент',
                'verbose_name_plural': 'Компоненты',
                'db_table': 'application_component_table',
                'ordering': ('component_Foreign', 'component_position'),
            },
        ),
    ]
